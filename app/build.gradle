
import java.util.concurrent.ConcurrentHashMap

plugins {
    id('com.android.application') version '8.3.0'
}

repositories {
    google()
    mavenCentral()
}

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId 'org.gradle.samples'
        namespace 'org.gradle.samples'
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

class CustomHashMap extends ConcurrentHashMap<String, String> {
    public int intField = 0
    public String strField = "empty"

    @Override
    String toString() {
        return "intField: $intField, strField: $strField"
    }
}

abstract class CustomMapTask extends DefaultTask {

    @Input
    abstract Property<String> getStrProperty()

    @Internal
    CustomHashMap customHashMap = new CustomHashMap()

    @TaskAction
    void action() {
        // empty
        println "custom hash map: ${customHashMap.toString()}"
    }

}
tasks.register("customMapTask", CustomMapTask.class) { task ->
    def map = new CustomHashMap()
    map.put("key", "value")
    map.intField = 233
    map.strField = "233"
    strProperty.set("2333")
    customHashMap = map
}